{"version":3,"sources":["components/Cell/Cell.module.css","components/Board/Board.module.css","components/Row/Row.module.css","components/Scores/Scores.module.css","logo.svg","hooks/useInterval.js","initState/board.js","initState/delays.js","components/Cell/index.js","components/Row/index.js","components/Board/index.js","components/Scores/index.js","components/Game/utils.js","utils/index.js","components/Game/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","wrapper","active","root","__webpack_require__","p","useInterval","callback","delay","savedCallback","useRef","useEffect","current","console","log","id","setInterval","clearInterval","board","delays","Cell","props","value","React","createElement","className","concat","styles","Row","data","map","cell","i","key","Board","row","Scores","getNewCells","newSnakeCoord","foods","updateCellByFigure","figure","cells","index","includedCoordsInRow","filter","coord","y","length","some","_ref2","x","_len","arguments","functions","Array","_key","reduce","acc","func","compose","getNewSnake","_ref3","snake","direction","food","_snake","_toArray","body","slice","newHead","head","nextX","nextY","maxX","maxY","getNewHeadCoord","newBody","_toConsumableArray","getIsCollision","newSnake","_newSnake","headX","headY","_ref4","getIsNextSpeed","getIsNeedNewFood","prevSnake","getNextState","states","currentState","currentIndex","indexOf","getRandFood","newFood","Math","round","random","_ref5","Game","_useState","useState","boardData","_useState2","_slicedToArray","updateCells","_useState3","_useState4","updateSnake","_useState5","_useState6","updateFood","_useState7","_useState8","setDirection","_useState9","_useState10","updateDelay","_useState11","_useState12","scores","updateScores","document","addEventListener","throttle","keyDownHandler","removeEventListener","alert","location","reload","moveTo","useCallback","arrow","newDirection","left","right","down","up","abs","_ref","newCells","isCollision","isNextSpeed","Fragment","App","Boolean","window","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ec3d1414.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Cell_wrapper__w1sNI\",\"active\":\"Cell_active__3BUTi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Board_root__2wloO\",\"wrapper\":\"Board_wrapper__13Igb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Row_wrapper__3KTVG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Scores_wrapper__R-iWr\"};","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { useState, useEffect, useRef } from 'react';\n\nfunction useInterval(callback, delay) {\n  const savedCallback = useRef();\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    console.log('!')\n    if (delay !== null) {\n      let id = setInterval(() => savedCallback.current(), delay);\n      return () => clearInterval(id);\n    }\n  }, [delay]);\n}\n\nexport default useInterval;\n","export default  [\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n];\n","export default [\n  200,\n  175,\n  150,\n  125,\n  110,\n  90,\n  70,\n  50,\n];\n","import React from 'react';\n\nimport styles from './Cell.module.css';\n\n\nfunction Cell(props) {\n  const { value } = props;\n  return <div className={`${styles.wrapper} ${value ? styles.active : ''}`}></div>\n}\n\nexport default Cell;\n","import React from 'react';\n\nimport Cell from '../Cell';\n\nimport styles from './Row.module.css';\n\n\nfunction Row(props) {\n  const { data } = props;\n  return (\n    <div className={styles.wrapper}>\n      {data.map((cell, i) => <Cell value={cell} key={`${i}${cell}`} />)}\n    </div>\n  )\n}\n\nexport default Row;\n","import React from 'react';\n\nimport Row from '../Row';\n\nimport styles from './Board.module.css';\n\n\nfunction Board(props) {\n  const { data } = props;\n  return (\n    <div className={styles.root}>\n      <div className={styles.wrapper}>\n        {data.map((row, i) => <Row data={row} key={`${i}${row[0]}`}/>)}\n      </div>\n     \n    </div>\n  )\n}\n\nexport default Board;\n","import React from 'react';\n\nimport styles from './Scores.module.css';\n\n\nfunction Scores(props) {\n  const { value } = props;\n  return <div className={styles.wrapper}>{value}</div>\n}\n\nexport default Scores;","import { compose } from '../../utils';\nimport cells from '../../initState/board';\n\n\nexport const getFigureState = (figure, coord) => figure.map(({ x, y }) => ({ x: x + coord.x, y: y + coord.y }))\n\n\nexport const getNewCells = (newSnakeCoord, foods) => {\n  \n  const updateCellByFigure = (figure) => cells => {\n    if (!figure) return cells\n    \n    return cells.map((row, index) => {\n      const includedCoordsInRow = figure.filter(coord => coord.y === index);\n      if (includedCoordsInRow.length > 0) {\n        const newRow = row.map((cell, i) => { \n          return includedCoordsInRow.some(({ x }) => i === x) ? 1 : cell;\n        });\n        return newRow;\n      }\n      return row;\n    })\n  } \n\n  const newCells = compose(\n    updateCellByFigure(newSnakeCoord),\n    updateCellByFigure(foods)\n  )(cells);\n\n  return newCells;\n}\n\n\nconst getNewHeadCoord = (head, direction, cells) => {\n  const nextX = head.x + direction.x;\n  const nextY = head.y + direction.y;\n  const maxX = cells[head.y].length - 1;\n  const maxY =  cells.length - 1;\n\n  if (nextX < 0) {\n    return { x: maxX, y: nextY }\n  }\n  if (nextX > maxX) {\n    return { x: 0, y: nextY };\n  }\n  if (nextY < 0) {\n    return { x: nextX, y: maxY };\n  }\n  if (nextY > maxY) {\n    return { x: nextX, y: 0 };\n  }\n  return {x: nextX, y: nextY };\n}\n\nexport const getNewSnake = ({ snake, direction, cells, food }) => {\n  const [tail, ...body] = snake;\n  const head = snake[snake.length - 1];\n\n  const newHead = getNewHeadCoord(head, direction, cells);\n  const newBody = food.x === newHead.x && food.y === newHead.y ? snake : body;\n  const newSnake = [...newBody, newHead];\n  return newSnake;\n}\n\nexport const getIsCollision = (newSnake) => {\n  const body = newSnake.slice(0, newSnake.length - 1);\n  const { x: headX, y: headY } = newSnake[newSnake.length - 1];\n  return body.some(({ x, y }) => x === headX && y === headY);\n};\n\nexport const getIsNextSpeed = snake => snake.length % 5 === 0;\n\nexport const getIsNeedNewFood = (prevSnake, newSnake) => newSnake.length > prevSnake.length;\n\nexport const getNextState = (states, currentState) => {\n  const currentIndex = states.indexOf(currentState);\n  return states[currentIndex + 1] ? states[currentIndex + 1] : states[currentIndex];\n}\n\nexport const getRandomElementFromArray = arr => arr[Math.round(Math.random() * (arr.length - 1))];\n\nexport const getRandFood = (cells, snake) => {\n  const newFood = { x: Math.round(Math.random() * (cells[0].length - 1)), y: Math.round(Math.random() * (cells.length - 1)) };\n  if (snake.some(({ x, y}) => x === newFood.x && y === newFood.y)) return getRandFood(cells, snake);\n  return [newFood];\n}\n","export const compose = (...functions) => value => functions.reduce((acc, func) => func(acc), value);\n\n","import React, { useState, useEffect, useCallback, useLayoutEffect } from 'react';\nimport throttle from 'lodash.throttle';\n\nimport useInterval from '../../hooks/useInterval';\nimport boardData from '../../initState/board';\nimport delays from '../../initState/delays';\n\nimport Board from '../Board';\nimport Scores from '../Scores';\n\nimport {\n  getNewCells,\n  getNewSnake,\n  getRandFood,\n  getIsCollision,\n  getIsNextSpeed,\n  getNextState,\n  getIsNeedNewFood,\n} from './utils';\n\n\n\n\nfunction Game() {\n  const [cells, updateCells] = useState(boardData);\n  const [snake, updateSnake] = useState([{ x: 5, y: 5 }, { x: 5, y: 6 }, { x: 5, y: 7 }]);\n  const [food, updateFood] = useState(getRandFood(cells, snake));\n  const [direction, setDirection] = useState({ x: 0, y: 1 });\n  const [delay, updateDelay] = useState(delays[0]);\n  const [scores, updateScores] = useState(0);\n\n  useEffect(() => {\n    document.addEventListener('keydown', throttle(keyDownHandler, 100), false);\n    return () => {\n      document.removeEventListener('keydown', keyDownHandler);\n    };\n  }, [])\n  \n  useEffect(() => {\n    if (delay === null) {\n      alert(`Your scores: ${scores}`);\n      document.location.reload();\n    }\n  }, [delay])\n\n  const moveTo = useCallback((arrow) => {\n    const directions = {\n      left: { x: -1, y: 0 },\n      right: { x: 1, y: 0 },\n      down: { x: 0, y: 1 },\n      up: { x: 0, y: -1 },  \n    }\n    const newDirection = directions[arrow];\n    \n    setDirection(direction => \n      Math.abs(direction.x) === Math.abs(newDirection.x) && Math.abs(direction.y) === Math.abs(newDirection.y)\n      ? direction\n      : newDirection\n    );\n  }, [direction])\n  \n\n  const keyDownHandler = ({ key }) => {\n\n    if (key === 'ArrowRight') {\n      moveTo('right');\n    }\n    if (key === 'ArrowLeft') {\n      moveTo('left');\n    }\n    if (key === 'ArrowDown') {\n      moveTo('down');\n    }\n    if (key === 'ArrowUp') {\n      moveTo('up')\n    }\n  }\n  \n\n\n  useInterval(() => {\n    const newSnake = getNewSnake({ snake, direction, cells, food: food[0] });\n    const newFood = newSnake.length > snake.length ? getRandFood(cells, newSnake) : food;\n    const newCells = getNewCells(newSnake, newFood);\n    const isCollision = getIsCollision(newSnake);\n    const isNextSpeed = getIsNextSpeed(newSnake);\n    const isNeedNewFood = getIsNeedNewFood(snake, newSnake);\n\n    if (isNeedNewFood) {\n      updateFood(newFood);\n      updateScores(scores => scores + 50)\n      if (isNextSpeed) {\n        updateDelay(getNextState(delays, delay));\n      }\n    }\n    updateSnake(newSnake);\n    updateCells(newCells);\n\n    if (isCollision) {\n      updateDelay(null);\n      return;\n    }\n  }, delay)\n\n  console.log('delay', delay)\n\n  return (\n    <>\n      <Scores value={scores} />\n      <Board data={cells}/>\n    </>\n    \n  )\n} \n\nexport default Game;\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport Game from './components/Game';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Game/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}