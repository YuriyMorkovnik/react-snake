{"version":3,"sources":["components/Cell/Cell.module.css","components/Board/Board.module.css","components/Row/Row.module.css","components/Scores/Scores.module.css","logo.svg","hooks/useInterval.js","initState/board.js","initState/delays.js","components/Cell/index.js","components/Row/index.js","components/Board/index.js","components/Scores/index.js","components/Game/utils.js","utils/index.js","components/Game/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","wrapper","active","root","__webpack_require__","p","useInterval","callback","delay","savedCallback","useRef","useEffect","current","console","log","id","setInterval","clearInterval","board","delays","Cell","props","value","react_default","a","createElement","className","concat","styles","Row","data","map","cell","i","components_Cell","key","Board","row","components_Row","Scores","getNewCells","newSnakeCoord","foods","updateCellByFigure","figure","cells","index","includedCoordsInRow","filter","coord","y","length","some","_ref2","x","_len","arguments","functions","Array","_key","reduce","acc","func","compose","getNewSnake","_ref3","snake","direction","food","_snake","Object","toArray","body","slice","newHead","head","nextX","nextY","maxX","maxY","getNewHeadCoord","newBody","toConsumableArray","getIsCollision","newSnake","_newSnake","headX","headY","_ref4","getIsNextSpeed","getIsNeedNewFood","prevSnake","getNextState","states","currentState","currentIndex","indexOf","getRandFood","newFood","Math","round","random","_ref5","Game","_useState","useState","boardData","_useState2","slicedToArray","updateCells","_useState3","_useState4","updateSnake","_useState5","_useState6","updateFood","_useState7","_useState8","setDirection","_useState9","_useState10","updateDelay","_useState11","_useState12","scores","updateScores","document","addEventListener","throttle","keyDownHandler","removeEventListener","alert","location","reload","moveTo","useCallback","arrow","newDirection","left","right","down","up","abs","_ref","newCells","isCollision","isNextSpeed","Fragment","components_Scores","components_Board","App","components_Game","Boolean","window","hostname","match","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9c6ced73.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Cell_wrapper__Zryhs\",\"active\":\"Cell_active__2hwen\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Board_root__1aAck\",\"wrapper\":\"Board_wrapper__102F6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Row_wrapper__3AiS5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Scores_wrapper__22ywC\"};","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { useState, useEffect, useRef } from 'react';\r\n\r\nfunction useInterval(callback, delay) {\r\n  const savedCallback = useRef();\r\n\r\n  // Remember the latest callback.\r\n  useEffect(() => {\r\n    savedCallback.current = callback;\r\n  }, [callback]);\r\n\r\n  // Set up the interval.\r\n  useEffect(() => {\r\n    console.log('!')\r\n    if (delay !== null) {\r\n      let id = setInterval(() => savedCallback.current(), delay);\r\n      return () => clearInterval(id);\r\n    }\r\n  }, [delay]);\r\n}\r\n\r\nexport default useInterval;\r\n","export default  [\r\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n];\r\n","export default [\r\n  200,\r\n  175,\r\n  150,\r\n  125,\r\n  110,\r\n  90,\r\n  70,\r\n  50,\r\n];\r\n","import React from 'react';\r\n\r\nimport styles from './Cell.module.css';\r\n\r\n\r\nfunction Cell(props) {\r\n  const { value } = props;\r\n  return <div className={`${styles.wrapper} ${value ? styles.active : ''}`}></div>\r\n}\r\n\r\nexport default Cell;\r\n","import React from 'react';\r\n\r\nimport Cell from '../Cell';\r\n\r\nimport styles from './Row.module.css';\r\n\r\n\r\nfunction Row(props) {\r\n  const { data } = props;\r\n  return (\r\n    <div className={styles.wrapper}>\r\n      {data.map((cell, i) => <Cell value={cell} key={`${i}${cell}`} />)}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Row;\r\n","import React from 'react';\r\n\r\nimport Row from '../Row';\r\n\r\nimport styles from './Board.module.css';\r\n\r\n\r\nfunction Board(props) {\r\n  const { data } = props;\r\n  return (\r\n    <div className={styles.root}>\r\n      <div className={styles.wrapper}>\r\n        {data.map((row, i) => <Row data={row} key={`${i}${row[0]}`}/>)}\r\n      </div>\r\n     \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Board;\r\n","import React from 'react';\r\n\r\nimport styles from './Scores.module.css';\r\n\r\n\r\nfunction Scores(props) {\r\n  const { value } = props;\r\n  return <div className={styles.wrapper}>{value}</div>\r\n}\r\n\r\nexport default Scores;","import { compose } from '../../utils';\r\nimport cells from '../../initState/board';\r\n\r\n\r\nexport const getFigureState = (figure, coord) => figure.map(({ x, y }) => ({ x: x + coord.x, y: y + coord.y }))\r\n\r\n\r\nexport const getNewCells = (newSnakeCoord, foods) => {\r\n  \r\n  const updateCellByFigure = (figure) => cells => {\r\n    if (!figure) return cells\r\n    \r\n    return cells.map((row, index) => {\r\n      const includedCoordsInRow = figure.filter(coord => coord.y === index);\r\n      if (includedCoordsInRow.length > 0) {\r\n        const newRow = row.map((cell, i) => { \r\n          return includedCoordsInRow.some(({ x }) => i === x) ? 1 : cell;\r\n        });\r\n        return newRow;\r\n      }\r\n      return row;\r\n    })\r\n  } \r\n\r\n  const newCells = compose(\r\n    updateCellByFigure(newSnakeCoord),\r\n    updateCellByFigure(foods)\r\n  )(cells);\r\n\r\n  return newCells;\r\n}\r\n\r\n\r\nconst getNewHeadCoord = (head, direction, cells) => {\r\n  const nextX = head.x + direction.x;\r\n  const nextY = head.y + direction.y;\r\n  const maxX = cells[head.y].length - 1;\r\n  const maxY =  cells.length - 1;\r\n\r\n  if (nextX < 0) {\r\n    return { x: maxX, y: nextY }\r\n  }\r\n  if (nextX > maxX) {\r\n    return { x: 0, y: nextY };\r\n  }\r\n  if (nextY < 0) {\r\n    return { x: nextX, y: maxY };\r\n  }\r\n  if (nextY > maxY) {\r\n    return { x: nextX, y: 0 };\r\n  }\r\n  return {x: nextX, y: nextY };\r\n}\r\n\r\nexport const getNewSnake = ({ snake, direction, cells, food }) => {\r\n  const [tail, ...body] = snake;\r\n  const head = snake[snake.length - 1];\r\n\r\n  const newHead = getNewHeadCoord(head, direction, cells);\r\n  const newBody = food.x === newHead.x && food.y === newHead.y ? snake : body;\r\n  const newSnake = [...newBody, newHead];\r\n  return newSnake;\r\n}\r\n\r\nexport const getIsCollision = (newSnake) => {\r\n  const body = newSnake.slice(0, newSnake.length - 1);\r\n  const { x: headX, y: headY } = newSnake[newSnake.length - 1];\r\n  return body.some(({ x, y }) => x === headX && y === headY);\r\n};\r\n\r\nexport const getIsNextSpeed = snake => snake.length % 5 === 0;\r\n\r\nexport const getIsNeedNewFood = (prevSnake, newSnake) => newSnake.length > prevSnake.length;\r\n\r\nexport const getNextState = (states, currentState) => {\r\n  const currentIndex = states.indexOf(currentState);\r\n  return states[currentIndex + 1] ? states[currentIndex + 1] : states[currentIndex];\r\n}\r\n\r\nexport const getRandomElementFromArray = arr => arr[Math.round(Math.random() * (arr.length - 1))];\r\n\r\nexport const getRandFood = (cells, snake) => {\r\n  const newFood = { x: Math.round(Math.random() * (cells[0].length - 1)), y: Math.round(Math.random() * (cells.length - 1)) };\r\n  if (snake.some(({ x, y}) => x === newFood.x && y === newFood.y)) return getRandFood(cells, snake);\r\n  return [newFood];\r\n}\r\n","export const compose = (...functions) => value => functions.reduce((acc, func) => func(acc), value);\r\n\r\n","import React, { useState, useEffect, useCallback, useLayoutEffect } from 'react';\r\nimport throttle from 'lodash.throttle';\r\n\r\nimport useInterval from '../../hooks/useInterval';\r\nimport boardData from '../../initState/board';\r\nimport delays from '../../initState/delays';\r\n\r\nimport Board from '../Board';\r\nimport Scores from '../Scores';\r\n\r\nimport {\r\n  getNewCells,\r\n  getNewSnake,\r\n  getRandFood,\r\n  getIsCollision,\r\n  getIsNextSpeed,\r\n  getNextState,\r\n  getIsNeedNewFood,\r\n} from './utils';\r\n\r\n\r\n\r\n\r\nfunction Game() {\r\n  const [cells, updateCells] = useState(boardData);\r\n  const [snake, updateSnake] = useState([{ x: 5, y: 5 }, { x: 5, y: 6 }, { x: 5, y: 7 }]);\r\n  const [food, updateFood] = useState(getRandFood(cells, snake));\r\n  const [direction, setDirection] = useState({ x: 0, y: 1 });\r\n  const [delay, updateDelay] = useState(delays[0]);\r\n  const [scores, updateScores] = useState(0);\r\n\r\n  useEffect(() => {\r\n    document.addEventListener('keydown', throttle(keyDownHandler, 100), false);\r\n    return () => {\r\n      document.removeEventListener('keydown', keyDownHandler);\r\n    };\r\n  }, [])\r\n  \r\n  useEffect(() => {\r\n    if (delay === null) {\r\n      alert(`Your scores: ${scores}`);\r\n      document.location.reload();\r\n    }\r\n  }, [delay])\r\n\r\n  const moveTo = useCallback((arrow) => {\r\n    const directions = {\r\n      left: { x: -1, y: 0 },\r\n      right: { x: 1, y: 0 },\r\n      down: { x: 0, y: 1 },\r\n      up: { x: 0, y: -1 },  \r\n    }\r\n    const newDirection = directions[arrow];\r\n    \r\n    setDirection(direction => \r\n      Math.abs(direction.x) === Math.abs(newDirection.x) && Math.abs(direction.y) === Math.abs(newDirection.y)\r\n      ? direction\r\n      : newDirection\r\n    );\r\n  }, [direction])\r\n  \r\n\r\n  const keyDownHandler = ({ key }) => {\r\n\r\n    if (key === 'ArrowRight') {\r\n      moveTo('right');\r\n    }\r\n    if (key === 'ArrowLeft') {\r\n      moveTo('left');\r\n    }\r\n    if (key === 'ArrowDown') {\r\n      moveTo('down');\r\n    }\r\n    if (key === 'ArrowUp') {\r\n      moveTo('up')\r\n    }\r\n  }\r\n  \r\n\r\n\r\n  useInterval(() => {\r\n    const newSnake = getNewSnake({ snake, direction, cells, food: food[0] });\r\n    const newFood = newSnake.length > snake.length ? getRandFood(cells, newSnake) : food;\r\n    const newCells = getNewCells(newSnake, newFood);\r\n    const isCollision = getIsCollision(newSnake);\r\n    const isNextSpeed = getIsNextSpeed(newSnake);\r\n    const isNeedNewFood = getIsNeedNewFood(snake, newSnake);\r\n\r\n    if (isNeedNewFood) {\r\n      updateFood(newFood);\r\n      updateScores(scores => scores + 50)\r\n      if (isNextSpeed) {\r\n        updateDelay(getNextState(delays, delay));\r\n      }\r\n    }\r\n    updateSnake(newSnake);\r\n    updateCells(newCells);\r\n\r\n    if (isCollision) {\r\n      updateDelay(null);\r\n      return;\r\n    }\r\n  }, delay)\r\n\r\n  console.log('delay', delay)\r\n\r\n  return (\r\n    <>\r\n      <Scores value={scores} />\r\n      <Board data={cells}/>\r\n    </>\r\n    \r\n  )\r\n} \r\n\r\nexport default Game;\r\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport Game from './components/Game';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Game/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}